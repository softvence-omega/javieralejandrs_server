model Blog {
  id                  String    @id @default(uuid())
  title               String
  blogThumbnail       String?
  authorId            String
  shortInto           String?
  themes              String?
  decor_entertainment String?
  conclusion          String?
  readTime            String?
  likeCount           Int       @default(0)
  commentCount        Int       @default(0)
  viewCount           Int       @default(0)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  author              User      @relation(fields: [authorId], references: [id])
  comments            Comment[]
  likes               Like[]
  views               View[]
}

model Like {
  id        String   @id @default(uuid())
  userId    String
  blogId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  blog      Blog     @relation(fields: [blogId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, blogId])
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  userId    String
  blogId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  blog      Blog     @relation(fields: [blogId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model View {
  id        String   @id @default(uuid())
  userId    String
  blogId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  blog      Blog     @relation(fields: [blogId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}
